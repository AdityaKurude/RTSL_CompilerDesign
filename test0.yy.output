Terminals unused in grammar

   LBRACKET
   RBRACKET
   ELLIPSIS


State 3 conflicts: 1 shift/reduce
State 51 conflicts: 5 shift/reduce
State 72 conflicts: 11 shift/reduce


Grammar

    0 $accept: prog $end

    1 prog: %empty
    2     | prog statement
    3     | prog declaration
    4     | prog function_defination

    5 statement: RETURN expression SEMICOLON
    6          | expression ASSIGN expression SEMICOLON
    7          | conditional_expression
    8          | expression

    9 declaration: TYPE IDENTIFIER ASSIGN expression SEMICOLON
   10            | QUANTIFIER declaration
   11            | TYPE IDENTIFIER SEMICOLON
   12            | CLASS IDENTIFIER COLON type SEMICOLON

   13 conditional_expression: IF expression opt block_list opt ELSE opt block_list opt

   14 opt: %empty
   15    | LBRACE
   16    | RBRACE

   17 expression: LPARENTHESIS expression RPARENTHESIS
   18           | expression OP expression
   19           | term
   20           | IDENTIFIER
   21           | function_call

   22 function_call: IDENTIFIER LPARENTHESIS parameter_list_list RPARENTHESIS

   23 function_defination: TYPE function_call LBRACE block_list RBRACE

   24 parameter_list_list: %empty
   25                    | parameter_list

   26 parameter_list: parameter
   27               | parameter_list parameter

   28 parameter: TYPE IDENTIFIER
   29          | IDENTIFIER

   30 block_list: block
   31           | block_list block

   32 block: statement
   33      | declaration

   34 term: INT
   35     | FLOAT

   36 OP: PLUS
   37   | MINUS
   38   | DIV
   39   | MUL
   40   | LT

   41 type: MATERIAL
   42     | CAMERA


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENTIFIER (258) 9 11 12 20 22 28 29
INT (259) 34
TYPE (260) 9 11 23 28
FLOAT (261) 35
QUANTIFIER (262) 10
IF (263) 13
ELSE (264) 13
RETURN (265) 5
CLASS (266) 12
MATERIAL (267) 41
CAMERA (268) 42
PLUS (269) 36
MUL (270) 39
MINUS (271) 37
DIV (272) 38
ASSIGN (273) 6 9
COLON (274) 12
SEMICOLON (275) 5 6 9 11 12
LT (276) 40
LPARENTHESIS (277) 17 22
RPARENTHESIS (278) 17 22
LBRACKET (279)
RBRACKET (280)
LBRACE (281) 15 23
RBRACE (282) 16 23
ELLIPSIS (283)


Nonterminals, with rules where they appear

$accept (29)
    on left: 0
prog (30)
    on left: 1 2 3 4, on right: 0 2 3 4
statement (31)
    on left: 5 6 7 8, on right: 2 32
declaration (32)
    on left: 9 10 11 12, on right: 3 10 33
conditional_expression (33)
    on left: 13, on right: 7
opt (34)
    on left: 14 15 16, on right: 13
expression (35)
    on left: 17 18 19 20 21, on right: 5 6 8 9 13 17 18
function_call (36)
    on left: 22, on right: 21 23
function_defination (37)
    on left: 23, on right: 4
parameter_list_list (38)
    on left: 24 25, on right: 22
parameter_list (39)
    on left: 26 27, on right: 25 27
parameter (40)
    on left: 28 29, on right: 26 27
block_list (41)
    on left: 30 31, on right: 13 23 31
block (42)
    on left: 32 33, on right: 30 31
term (43)
    on left: 34 35, on right: 19
OP (44)
    on left: 36 37 38 39 40, on right: 18
type (45)
    on left: 41 42, on right: 12


State 0

    0 $accept: . prog $end

    $default  reduce using rule 1 (prog)

    prog  go to state 1


State 1

    0 $accept: prog . $end
    2 prog: prog . statement
    3     | prog . declaration
    4     | prog . function_defination

    $end          shift, and go to state 2
    IDENTIFIER    shift, and go to state 3
    INT           shift, and go to state 4
    TYPE          shift, and go to state 5
    FLOAT         shift, and go to state 6
    QUANTIFIER    shift, and go to state 7
    IF            shift, and go to state 8
    RETURN        shift, and go to state 9
    CLASS         shift, and go to state 10
    LPARENTHESIS  shift, and go to state 11

    statement               go to state 12
    declaration             go to state 13
    conditional_expression  go to state 14
    expression              go to state 15
    function_call           go to state 16
    function_defination     go to state 17
    term                    go to state 18


State 2

    0 $accept: prog $end .

    $default  accept


State 3

   20 expression: IDENTIFIER .
   22 function_call: IDENTIFIER . LPARENTHESIS parameter_list_list RPARENTHESIS

    LPARENTHESIS  shift, and go to state 19

    LPARENTHESIS  [reduce using rule 20 (expression)]
    $default      reduce using rule 20 (expression)


State 4

   34 term: INT .

    $default  reduce using rule 34 (term)


State 5

    9 declaration: TYPE . IDENTIFIER ASSIGN expression SEMICOLON
   11            | TYPE . IDENTIFIER SEMICOLON
   23 function_defination: TYPE . function_call LBRACE block_list RBRACE

    IDENTIFIER  shift, and go to state 20

    function_call  go to state 21


State 6

   35 term: FLOAT .

    $default  reduce using rule 35 (term)


State 7

   10 declaration: QUANTIFIER . declaration

    TYPE        shift, and go to state 22
    QUANTIFIER  shift, and go to state 7
    CLASS       shift, and go to state 10

    declaration  go to state 23


State 8

   13 conditional_expression: IF . expression opt block_list opt ELSE opt block_list opt

    IDENTIFIER    shift, and go to state 3
    INT           shift, and go to state 4
    FLOAT         shift, and go to state 6
    LPARENTHESIS  shift, and go to state 11

    expression     go to state 24
    function_call  go to state 16
    term           go to state 18


State 9

    5 statement: RETURN . expression SEMICOLON

    IDENTIFIER    shift, and go to state 3
    INT           shift, and go to state 4
    FLOAT         shift, and go to state 6
    LPARENTHESIS  shift, and go to state 11

    expression     go to state 25
    function_call  go to state 16
    term           go to state 18


State 10

   12 declaration: CLASS . IDENTIFIER COLON type SEMICOLON

    IDENTIFIER  shift, and go to state 26


State 11

   17 expression: LPARENTHESIS . expression RPARENTHESIS

    IDENTIFIER    shift, and go to state 3
    INT           shift, and go to state 4
    FLOAT         shift, and go to state 6
    LPARENTHESIS  shift, and go to state 11

    expression     go to state 27
    function_call  go to state 16
    term           go to state 18


State 12

    2 prog: prog statement .

    $default  reduce using rule 2 (prog)


State 13

    3 prog: prog declaration .

    $default  reduce using rule 3 (prog)


State 14

    7 statement: conditional_expression .

    $default  reduce using rule 7 (statement)


State 15

    6 statement: expression . ASSIGN expression SEMICOLON
    8          | expression .
   18 expression: expression . OP expression

    PLUS    shift, and go to state 28
    MUL     shift, and go to state 29
    MINUS   shift, and go to state 30
    DIV     shift, and go to state 31
    ASSIGN  shift, and go to state 32
    LT      shift, and go to state 33

    $default  reduce using rule 8 (statement)

    OP  go to state 34


State 16

   21 expression: function_call .

    $default  reduce using rule 21 (expression)


State 17

    4 prog: prog function_defination .

    $default  reduce using rule 4 (prog)


State 18

   19 expression: term .

    $default  reduce using rule 19 (expression)


State 19

   22 function_call: IDENTIFIER LPARENTHESIS . parameter_list_list RPARENTHESIS

    IDENTIFIER  shift, and go to state 35
    TYPE        shift, and go to state 36

    $default  reduce using rule 24 (parameter_list_list)

    parameter_list_list  go to state 37
    parameter_list       go to state 38
    parameter            go to state 39


State 20

    9 declaration: TYPE IDENTIFIER . ASSIGN expression SEMICOLON
   11            | TYPE IDENTIFIER . SEMICOLON
   22 function_call: IDENTIFIER . LPARENTHESIS parameter_list_list RPARENTHESIS

    ASSIGN        shift, and go to state 40
    SEMICOLON     shift, and go to state 41
    LPARENTHESIS  shift, and go to state 19


State 21

   23 function_defination: TYPE function_call . LBRACE block_list RBRACE

    LBRACE  shift, and go to state 42


State 22

    9 declaration: TYPE . IDENTIFIER ASSIGN expression SEMICOLON
   11            | TYPE . IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 43


State 23

   10 declaration: QUANTIFIER declaration .

    $default  reduce using rule 10 (declaration)


State 24

   13 conditional_expression: IF expression . opt block_list opt ELSE opt block_list opt
   18 expression: expression . OP expression

    PLUS    shift, and go to state 28
    MUL     shift, and go to state 29
    MINUS   shift, and go to state 30
    DIV     shift, and go to state 31
    LT      shift, and go to state 33
    LBRACE  shift, and go to state 44
    RBRACE  shift, and go to state 45

    $default  reduce using rule 14 (opt)

    opt  go to state 46
    OP   go to state 34


State 25

    5 statement: RETURN expression . SEMICOLON
   18 expression: expression . OP expression

    PLUS       shift, and go to state 28
    MUL        shift, and go to state 29
    MINUS      shift, and go to state 30
    DIV        shift, and go to state 31
    SEMICOLON  shift, and go to state 47
    LT         shift, and go to state 33

    OP  go to state 34


State 26

   12 declaration: CLASS IDENTIFIER . COLON type SEMICOLON

    COLON  shift, and go to state 48


State 27

   17 expression: LPARENTHESIS expression . RPARENTHESIS
   18           | expression . OP expression

    PLUS          shift, and go to state 28
    MUL           shift, and go to state 29
    MINUS         shift, and go to state 30
    DIV           shift, and go to state 31
    LT            shift, and go to state 33
    RPARENTHESIS  shift, and go to state 49

    OP  go to state 34


State 28

   36 OP: PLUS .

    $default  reduce using rule 36 (OP)


State 29

   39 OP: MUL .

    $default  reduce using rule 39 (OP)


State 30

   37 OP: MINUS .

    $default  reduce using rule 37 (OP)


State 31

   38 OP: DIV .

    $default  reduce using rule 38 (OP)


State 32

    6 statement: expression ASSIGN . expression SEMICOLON

    IDENTIFIER    shift, and go to state 3
    INT           shift, and go to state 4
    FLOAT         shift, and go to state 6
    LPARENTHESIS  shift, and go to state 11

    expression     go to state 50
    function_call  go to state 16
    term           go to state 18


State 33

   40 OP: LT .

    $default  reduce using rule 40 (OP)


State 34

   18 expression: expression OP . expression

    IDENTIFIER    shift, and go to state 3
    INT           shift, and go to state 4
    FLOAT         shift, and go to state 6
    LPARENTHESIS  shift, and go to state 11

    expression     go to state 51
    function_call  go to state 16
    term           go to state 18


State 35

   29 parameter: IDENTIFIER .

    $default  reduce using rule 29 (parameter)


State 36

   28 parameter: TYPE . IDENTIFIER

    IDENTIFIER  shift, and go to state 52


State 37

   22 function_call: IDENTIFIER LPARENTHESIS parameter_list_list . RPARENTHESIS

    RPARENTHESIS  shift, and go to state 53


State 38

   25 parameter_list_list: parameter_list .
   27 parameter_list: parameter_list . parameter

    IDENTIFIER  shift, and go to state 35
    TYPE        shift, and go to state 36

    $default  reduce using rule 25 (parameter_list_list)

    parameter  go to state 54


State 39

   26 parameter_list: parameter .

    $default  reduce using rule 26 (parameter_list)


State 40

    9 declaration: TYPE IDENTIFIER ASSIGN . expression SEMICOLON

    IDENTIFIER    shift, and go to state 3
    INT           shift, and go to state 4
    FLOAT         shift, and go to state 6
    LPARENTHESIS  shift, and go to state 11

    expression     go to state 55
    function_call  go to state 16
    term           go to state 18


State 41

   11 declaration: TYPE IDENTIFIER SEMICOLON .

    $default  reduce using rule 11 (declaration)


State 42

   23 function_defination: TYPE function_call LBRACE . block_list RBRACE

    IDENTIFIER    shift, and go to state 3
    INT           shift, and go to state 4
    TYPE          shift, and go to state 22
    FLOAT         shift, and go to state 6
    QUANTIFIER    shift, and go to state 7
    IF            shift, and go to state 8
    RETURN        shift, and go to state 9
    CLASS         shift, and go to state 10
    LPARENTHESIS  shift, and go to state 11

    statement               go to state 56
    declaration             go to state 57
    conditional_expression  go to state 14
    expression              go to state 15
    function_call           go to state 16
    block_list              go to state 58
    block                   go to state 59
    term                    go to state 18


State 43

    9 declaration: TYPE IDENTIFIER . ASSIGN expression SEMICOLON
   11            | TYPE IDENTIFIER . SEMICOLON

    ASSIGN     shift, and go to state 40
    SEMICOLON  shift, and go to state 41


State 44

   15 opt: LBRACE .

    $default  reduce using rule 15 (opt)


State 45

   16 opt: RBRACE .

    $default  reduce using rule 16 (opt)


State 46

   13 conditional_expression: IF expression opt . block_list opt ELSE opt block_list opt

    IDENTIFIER    shift, and go to state 3
    INT           shift, and go to state 4
    TYPE          shift, and go to state 22
    FLOAT         shift, and go to state 6
    QUANTIFIER    shift, and go to state 7
    IF            shift, and go to state 8
    RETURN        shift, and go to state 9
    CLASS         shift, and go to state 10
    LPARENTHESIS  shift, and go to state 11

    statement               go to state 56
    declaration             go to state 57
    conditional_expression  go to state 14
    expression              go to state 15
    function_call           go to state 16
    block_list              go to state 60
    block                   go to state 59
    term                    go to state 18


State 47

    5 statement: RETURN expression SEMICOLON .

    $default  reduce using rule 5 (statement)


State 48

   12 declaration: CLASS IDENTIFIER COLON . type SEMICOLON

    MATERIAL  shift, and go to state 61
    CAMERA    shift, and go to state 62

    type  go to state 63


State 49

   17 expression: LPARENTHESIS expression RPARENTHESIS .

    $default  reduce using rule 17 (expression)


State 50

    6 statement: expression ASSIGN expression . SEMICOLON
   18 expression: expression . OP expression

    PLUS       shift, and go to state 28
    MUL        shift, and go to state 29
    MINUS      shift, and go to state 30
    DIV        shift, and go to state 31
    SEMICOLON  shift, and go to state 64
    LT         shift, and go to state 33

    OP  go to state 34


State 51

   18 expression: expression . OP expression
   18           | expression OP expression .

    PLUS   shift, and go to state 28
    MUL    shift, and go to state 29
    MINUS  shift, and go to state 30
    DIV    shift, and go to state 31
    LT     shift, and go to state 33

    PLUS      [reduce using rule 18 (expression)]
    MUL       [reduce using rule 18 (expression)]
    MINUS     [reduce using rule 18 (expression)]
    DIV       [reduce using rule 18 (expression)]
    LT        [reduce using rule 18 (expression)]
    $default  reduce using rule 18 (expression)

    OP  go to state 34


State 52

   28 parameter: TYPE IDENTIFIER .

    $default  reduce using rule 28 (parameter)


State 53

   22 function_call: IDENTIFIER LPARENTHESIS parameter_list_list RPARENTHESIS .

    $default  reduce using rule 22 (function_call)


State 54

   27 parameter_list: parameter_list parameter .

    $default  reduce using rule 27 (parameter_list)


State 55

    9 declaration: TYPE IDENTIFIER ASSIGN expression . SEMICOLON
   18 expression: expression . OP expression

    PLUS       shift, and go to state 28
    MUL        shift, and go to state 29
    MINUS      shift, and go to state 30
    DIV        shift, and go to state 31
    SEMICOLON  shift, and go to state 65
    LT         shift, and go to state 33

    OP  go to state 34


State 56

   32 block: statement .

    $default  reduce using rule 32 (block)


State 57

   33 block: declaration .

    $default  reduce using rule 33 (block)


State 58

   23 function_defination: TYPE function_call LBRACE block_list . RBRACE
   31 block_list: block_list . block

    IDENTIFIER    shift, and go to state 3
    INT           shift, and go to state 4
    TYPE          shift, and go to state 22
    FLOAT         shift, and go to state 6
    QUANTIFIER    shift, and go to state 7
    IF            shift, and go to state 8
    RETURN        shift, and go to state 9
    CLASS         shift, and go to state 10
    LPARENTHESIS  shift, and go to state 11
    RBRACE        shift, and go to state 66

    statement               go to state 56
    declaration             go to state 57
    conditional_expression  go to state 14
    expression              go to state 15
    function_call           go to state 16
    block                   go to state 67
    term                    go to state 18


State 59

   30 block_list: block .

    $default  reduce using rule 30 (block_list)


State 60

   13 conditional_expression: IF expression opt block_list . opt ELSE opt block_list opt
   31 block_list: block_list . block

    IDENTIFIER    shift, and go to state 3
    INT           shift, and go to state 4
    TYPE          shift, and go to state 22
    FLOAT         shift, and go to state 6
    QUANTIFIER    shift, and go to state 7
    IF            shift, and go to state 8
    RETURN        shift, and go to state 9
    CLASS         shift, and go to state 10
    LPARENTHESIS  shift, and go to state 11
    LBRACE        shift, and go to state 44
    RBRACE        shift, and go to state 45

    $default  reduce using rule 14 (opt)

    statement               go to state 56
    declaration             go to state 57
    conditional_expression  go to state 14
    opt                     go to state 68
    expression              go to state 15
    function_call           go to state 16
    block                   go to state 67
    term                    go to state 18


State 61

   41 type: MATERIAL .

    $default  reduce using rule 41 (type)


State 62

   42 type: CAMERA .

    $default  reduce using rule 42 (type)


State 63

   12 declaration: CLASS IDENTIFIER COLON type . SEMICOLON

    SEMICOLON  shift, and go to state 69


State 64

    6 statement: expression ASSIGN expression SEMICOLON .

    $default  reduce using rule 6 (statement)


State 65

    9 declaration: TYPE IDENTIFIER ASSIGN expression SEMICOLON .

    $default  reduce using rule 9 (declaration)


State 66

   23 function_defination: TYPE function_call LBRACE block_list RBRACE .

    $default  reduce using rule 23 (function_defination)


State 67

   31 block_list: block_list block .

    $default  reduce using rule 31 (block_list)


State 68

   13 conditional_expression: IF expression opt block_list opt . ELSE opt block_list opt

    ELSE  shift, and go to state 70


State 69

   12 declaration: CLASS IDENTIFIER COLON type SEMICOLON .

    $default  reduce using rule 12 (declaration)


State 70

   13 conditional_expression: IF expression opt block_list opt ELSE . opt block_list opt

    LBRACE  shift, and go to state 44
    RBRACE  shift, and go to state 45

    $default  reduce using rule 14 (opt)

    opt  go to state 71


State 71

   13 conditional_expression: IF expression opt block_list opt ELSE opt . block_list opt

    IDENTIFIER    shift, and go to state 3
    INT           shift, and go to state 4
    TYPE          shift, and go to state 22
    FLOAT         shift, and go to state 6
    QUANTIFIER    shift, and go to state 7
    IF            shift, and go to state 8
    RETURN        shift, and go to state 9
    CLASS         shift, and go to state 10
    LPARENTHESIS  shift, and go to state 11

    statement               go to state 56
    declaration             go to state 57
    conditional_expression  go to state 14
    expression              go to state 15
    function_call           go to state 16
    block_list              go to state 72
    block                   go to state 59
    term                    go to state 18


State 72

   13 conditional_expression: IF expression opt block_list opt ELSE opt block_list . opt
   31 block_list: block_list . block

    IDENTIFIER    shift, and go to state 3
    INT           shift, and go to state 4
    TYPE          shift, and go to state 22
    FLOAT         shift, and go to state 6
    QUANTIFIER    shift, and go to state 7
    IF            shift, and go to state 8
    RETURN        shift, and go to state 9
    CLASS         shift, and go to state 10
    LPARENTHESIS  shift, and go to state 11
    LBRACE        shift, and go to state 44
    RBRACE        shift, and go to state 45

    IDENTIFIER    [reduce using rule 14 (opt)]
    INT           [reduce using rule 14 (opt)]
    TYPE          [reduce using rule 14 (opt)]
    FLOAT         [reduce using rule 14 (opt)]
    QUANTIFIER    [reduce using rule 14 (opt)]
    IF            [reduce using rule 14 (opt)]
    RETURN        [reduce using rule 14 (opt)]
    CLASS         [reduce using rule 14 (opt)]
    LPARENTHESIS  [reduce using rule 14 (opt)]
    LBRACE        [reduce using rule 14 (opt)]
    RBRACE        [reduce using rule 14 (opt)]
    $default      reduce using rule 14 (opt)

    statement               go to state 56
    declaration             go to state 57
    conditional_expression  go to state 14
    opt                     go to state 73
    expression              go to state 15
    function_call           go to state 16
    block                   go to state 67
    term                    go to state 18


State 73

   13 conditional_expression: IF expression opt block_list opt ELSE opt block_list opt .

    $default  reduce using rule 13 (conditional_expression)
